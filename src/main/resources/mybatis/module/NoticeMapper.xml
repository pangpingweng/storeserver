<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.project.module.mapper.NoticeMapper">
    
    <resultMap type="Notice" id="NoticeResult">
        <result property="noticeId"    column="notice_id"    />
        <result property="noticeName"    column="notice_name"    />
        <result property="noticeContent"    column="notice_content"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectNoticeVo">
        select notice_id, notice_name, notice_content, remark, create_time, create_by, update_by, update_time from module_notice
    </sql>

    <select id="selectNoticeList" parameterType="Notice" resultMap="NoticeResult">
        <include refid="selectNoticeVo"/>
        <where>  
            <if test="noticeName != null  and noticeName != ''"> and notice_name like concat('%', #{noticeName}, '%')</if>
            <if test="noticeContent != null  and noticeContent != ''"> and notice_content like concat('%', #{noticeContent}, '%')</if>
            <if test="remark != null  and remark != ''"> and year(create_time) = #{remark}</if>
        </where>
        order by create_time desc
    </select>
    
    <select id="selectNoticeByNoticeId" parameterType="Long" resultMap="NoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>
        
    <insert id="insertNotice" parameterType="Notice" useGeneratedKeys="true" keyProperty="noticeId">
        insert into module_notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="noticeName != null">notice_name,</if>
            <if test="noticeContent != null">notice_content,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="noticeName != null">#{noticeName},</if>
            <if test="noticeContent != null">#{noticeContent},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateNotice" parameterType="Notice">
        update module_notice
        <trim prefix="SET" suffixOverrides=",">
            <if test="noticeName != null">notice_name = #{noticeName},</if>
            <if test="noticeContent != null">notice_content = #{noticeContent},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where notice_id = #{noticeId}
    </update>

    <delete id="deleteNoticeByNoticeId" parameterType="Long">
        delete from module_notice where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeByNoticeIds" parameterType="String">
        delete from module_notice where notice_id in 
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>
</mapper>