<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.project.module.mapper.SupplierMapper">
    
    <resultMap type="Supplier" id="SupplierResult">
        <result property="supplierId"    column="supplier_id"    />
        <result property="supplierName"    column="supplier_name"    />
        <result property="phone"    column="phone"    />
        <result property="person"    column="person"    />
        <result property="address"    column="address"    />
        <result property="createTime"    column="create_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectSupplierVo">
        select supplier_id, supplier_name, phone, person, address, create_time, remark from module_supplier
    </sql>

    <select id="selectSupplierList" parameterType="Supplier" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        <where>  
            <if test="supplierName != null  and supplierName != ''"> and supplier_name like concat('%', #{supplierName}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
        </where>
    </select>
    
    <select id="selectSupplierBySupplierId" parameterType="Long" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        where supplier_id = #{supplierId}
    </select>
        
    <insert id="insertSupplier" parameterType="Supplier" useGeneratedKeys="true" keyProperty="supplierId">
        insert into module_supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="supplierName != null">supplier_name,</if>
            <if test="phone != null">phone,</if>
            <if test="person != null">person,</if>
            <if test="address != null">address,</if>
            <if test="createTime != null">create_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="supplierName != null">#{supplierName},</if>
            <if test="phone != null">#{phone},</if>
            <if test="person != null">#{person},</if>
            <if test="address != null">#{address},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateSupplier" parameterType="Supplier">
        update module_supplier
        <trim prefix="SET" suffixOverrides=",">
            <if test="supplierName != null">supplier_name = #{supplierName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="person != null">person = #{person},</if>
            <if test="address != null">address = #{address},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where supplier_id = #{supplierId}
    </update>

    <delete id="deleteSupplierBySupplierId" parameterType="Long">
        delete from module_supplier where supplier_id = #{supplierId}
    </delete>

    <delete id="deleteSupplierBySupplierIds" parameterType="String">
        delete from module_supplier where supplier_id in 
        <foreach item="supplierId" collection="array" open="(" separator="," close=")">
            #{supplierId}
        </foreach>
    </delete>
</mapper>