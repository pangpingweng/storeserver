<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.project.module.mapper.StoreMapper">
    
    <resultMap type="Store" id="StoreResult">
        <result property="storeId"    column="store_id"    />
        <result property="storeName"    column="store_name"    />
        <result property="storeSize"    column="store_size"    />
        <result property="storeAddress"    column="store_address"    />
        <result property="createTime"    column="create_time"    />
        <result property="remark"    column="remark"    />
        <result property="store_manager"    column="store_manager"    />
        <result property="store_check"    column="store_check"    />
        <result property="manager_id"    column="manager_id"    />
    </resultMap>

    <sql id="selectStoreVo">
        select store_id, store_name, store_size, store_address, create_time, remark,store_manager,store_check,manager_id from module_store
    </sql>

    <select id="selectStoreList" parameterType="Store" resultMap="StoreResult">
        <include refid="selectStoreVo"/>
        <where>  
            <if test="storeName != null  and storeName != ''"> and store_name like concat('%', #{storeName}, '%')</if>
            <if test="manager_id != null "> and manager_id = #{manager_id}</if>
        </where>
    </select>
    
    <select id="selectStoreByStoreId" parameterType="Long" resultMap="StoreResult">
        <include refid="selectStoreVo"/>
        where store_id = #{storeId}
    </select>
        
    <insert id="insertStore" parameterType="Store" useGeneratedKeys="true" keyProperty="storeId">
        insert into module_store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storeName != null">store_name,</if>
            <if test="storeSize != null">store_size,</if>
            <if test="storeAddress != null">store_address,</if>
            <if test="createTime != null">create_time,</if>
            <if test="remark != null">remark,</if>
            <if test="store_manager != null">store_manager,</if>
            <if test="store_check != null">store_check,</if>
            <if test="manager_id != null">manager_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storeName != null">#{storeName},</if>
            <if test="storeSize != null">#{storeSize},</if>
            <if test="storeAddress != null">#{storeAddress},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="store_manager != null">store_manager,</if>
            <if test="store_check != null">store_check,</if>
            <if test="manager_id != null">manager_id,</if>
         </trim>
    </insert>

    <update id="updateStore" parameterType="Store">
        update module_store
        <trim prefix="SET" suffixOverrides=",">
            <if test="storeName != null">store_name = #{storeName},</if>
            <if test="storeSize != null">store_size = #{storeSize},</if>
            <if test="storeAddress != null">store_address = #{storeAddress},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="store_manager != null">store_manager = #{store_manager},</if>
            <if test="store_check != null">store_check = #{store_check},</if>
            <if test="manager_id != null">manager_id = #{manager_id},</if>
        </trim>
        where store_id = #{storeId}
    </update>

    <delete id="deleteStoreByStoreId" parameterType="Long">
        delete from module_store where store_id = #{storeId}
    </delete>

    <delete id="deleteStoreByStoreIds" parameterType="String">
        delete from module_store where store_id in 
        <foreach item="storeId" collection="array" open="(" separator="," close=")">
            #{storeId}
        </foreach>
    </delete>
</mapper>